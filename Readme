# 🛒 Retail Sales Analysis Dashboard

<p align="center">
  <img src="https://img.shields.io/badge/Python-3.9-blue.svg" alt="Python">
  <img src="https://img.shields.io/badge/Streamlit-1.12-orange.svg" alt="Streamlit">
  <img src="https://img.shields.io/badge/Plotly-5.9-purple.svg" alt="Plotly">
  <img src="https://img.shields.io/badge/License-MIT-green.svg" alt="License">
</p>

A dynamic and fully interactive dashboard for analyzing retail sales data, built with **Python, Streamlit, and Plotly**. This tool transforms raw data into actionable business insights, making it easy to identify trends, patterns, and opportunities.

---

## 🌐 Live Demo

Experience the dashboard in action! No installation required.

[🚀 **Open the Interactive Dashboard**](https://salesretaildashboard-ejyxim7lmamqctdnfhwjeq.streamlit.app/)

---

## 📋 Project Overview

This project demonstrates a complete, end-to-end data analytics workflow. Starting with a raw retail sales dataset from Kaggle, I performed comprehensive data cleaning, exploratory data analysis (EDA), and feature engineering. The result is a professionally designed, interactive dashboard that visualizes key performance indicators and uncovers critical business insights.

---

## 🚀 Features

- **📈 Total and Category Sales:** Instantly view total revenue and compare sales performance across different product categories.
- **📅 Monthly Trends:** Uncover sales patterns and seasonality with an interactive time-series analysis.
- **👥 Customer Analysis:** Discover which age groups and customer segments are the most valuable drivers of revenue.
- **🏆 Top Customers:** Quickly identify the top 10 customers by their contribution to revenue.
- **🔎 Category-wise Filtering:** Use the sidebar to dynamically filter all visualizations by product category for a granular view.
- **✨ Interactive Visuals:** All plots are built with Plotly, allowing you to hover for details, zoom into specific periods, and filter data on the fly.
- **💡 Business Insights:** Key findings are highlighted in expandable sections to provide clear, actionable recommendations.

---

## 🛠️ Technologies Used

- **Core Language:** Python
- **Data Manipulation:** Pandas, NumPy
- **Data Visualization:** Plotly
- **Web Framework:** Streamlit

---

## 🗂️ How to Run Locally

Get the dashboard running on your local machine in just a few steps.

1. **Clone this repository:**
    ```bash
    git clone https://github.com/kritikarewrimsc23-blip/salesretaildashboard.git
    cd sales-retail-dashboard
    ```

2. **Install dependencies:**
    ```bash
    pip install -r requirements.txt
    ```

3. **Run the app:**
    ```bash
    streamlit run sales.py
    ```
    Your browser should open with the dashboard running automatically.

---

## 📦 Files in this Repository

- `sales.py` — The main Streamlit dashboard script.
- `cleaned_sales.csv` — The cleaned retail sales data used in the dashboard (sourced from Kaggle).
- `requirements.txt` — A list of all Python dependencies required to run the project.
- `README.md` — You are here!

---

## 🧠 Key Insights Uncovered

This dashboard helps to quickly identify critical business trends:

- **Highest Sales Category:** The **Electronics** category consistently outperforms others, indicating a strong market position.
- **Seasonal Peaks:** Sales experience a significant surge during the holiday months of **November and December**.
- **Key Demographics:** Customers aged **21–40** are the largest contributors to revenue, making them a key target audience.
- **Customer Loyalty:** A small number of loyal, high-spending customers account for a significant portion of total revenue.

---

## 📢 Notes

- **Data Source:** The data used for this project is the [Retail Sales Dataset on Kaggle](https://kaggle.com/).
- The dashboard is hosted live on Streamlit Community Cloud—feel free to explore it without any local setup!

---

## 👤 Author

- **Kritika Rewri**
- Connect with me on [LinkedIn](https://www.linkedin.com/in/kritika-r-8a9465217?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app)

---

If you liked this project, please give it a ⭐!
